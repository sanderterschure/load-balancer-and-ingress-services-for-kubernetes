/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	akov1alpha2 "github.com/vmware/load-balancer-and-ingress-services-for-kubernetes/pkg/apis/ako/v1alpha2"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// L4RuleLister helps list L4Rules.
// All objects returned here must be treated as read-only.
type L4RuleLister interface {
	// List lists all L4Rules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*akov1alpha2.L4Rule, err error)
	// L4Rules returns an object that can list and get L4Rules.
	L4Rules(namespace string) L4RuleNamespaceLister
	L4RuleListerExpansion
}

// l4RuleLister implements the L4RuleLister interface.
type l4RuleLister struct {
	listers.ResourceIndexer[*akov1alpha2.L4Rule]
}

// NewL4RuleLister returns a new L4RuleLister.
func NewL4RuleLister(indexer cache.Indexer) L4RuleLister {
	return &l4RuleLister{listers.New[*akov1alpha2.L4Rule](indexer, akov1alpha2.Resource("l4rule"))}
}

// L4Rules returns an object that can list and get L4Rules.
func (s *l4RuleLister) L4Rules(namespace string) L4RuleNamespaceLister {
	return l4RuleNamespaceLister{listers.NewNamespaced[*akov1alpha2.L4Rule](s.ResourceIndexer, namespace)}
}

// L4RuleNamespaceLister helps list and get L4Rules.
// All objects returned here must be treated as read-only.
type L4RuleNamespaceLister interface {
	// List lists all L4Rules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*akov1alpha2.L4Rule, err error)
	// Get retrieves the L4Rule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*akov1alpha2.L4Rule, error)
	L4RuleNamespaceListerExpansion
}

// l4RuleNamespaceLister implements the L4RuleNamespaceLister
// interface.
type l4RuleNamespaceLister struct {
	listers.ResourceIndexer[*akov1alpha2.L4Rule]
}
